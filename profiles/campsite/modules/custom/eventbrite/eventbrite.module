<?php

/**
 * Implements hook_menu().
 */
function eventbrite_menu() {
  return array(
    'admin/config/system/eventbrite' => array(
      'title' => 'Eventbrite',
      'description' => 'Setup Eventbrite integration',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('eventbrite_admin_config_form'),
      'access arguments' => array('administer site configuration'),
      'file' => 'eventbrite.admin.inc',
    ),
    'api/v3/eventbrite/endpoint' => array(
      'page callback' => 'eventbrite_webhook_process',
      'access arguments' => array('access content'),
    ),
  );
}

function eventbrite_webhook_process() {
  $webhook = json_decode(file_get_contents('php://input'), TRUE);
  if ($webhook['config']['action'] === 'order.placed') {
    $token = variable_get('eventbrite_oauth_token', '');
    if (empty($token)) {
      watchdog('eventbrite', 'You have to fill your token first.', array(), WATCHDOG_ERROR);
      return;
    }
    $request_url = $webhook['api_url'] . '?expand=attendees&token=' . $token;
    $order = json_decode(file_get_contents($request_url), TRUE);
    watchdog('eventbrite', 'eventbrite_webhook_process: Eventbrite API response: !order', array(
      '!order' => '<pre>' . print_r($order, TRUE) . '</pre>',
    ), WATCHDOG_DEBUG);
    $attendees = $order['attendees'];
    foreach ($attendees as $attendee) {
      if (user_load_by_mail($attendee['profile']['email']) === FALSE) {
        $account = drupal_anonymous_user();
        $account->mail = $attendee['profile']['email'];
        $parts = explode("@", $attendee['profile']['email']);
        $account->name = $parts[0];
        $account->field_user_first_name['und'][0]['value'] = $attendee['profile']['first_name'];
        $account->field_user_last_name['und'][0]['value'] = $attendee['profile']['last_name'];
        $account->status = 1;
        $account = user_save($account);
        // Modify user role, if any is selected
        if (!empty($rid = variable_get('eventbrite_role', ''))) {
          user_multiple_role_edit(array($account->uid), 'add_role', $rid);
        }
        // Notify user about new account.
        _user_mail_notify('register_admin_created', $account);
        watchdog('eventbrite', 'User #@id has been created', array('@id' => $account->uid), WATCHDOG_INFO);
      }
      else {
        watchdog('eventbrite', "User with email @email hasn't been created", array('@email' => $email), WATCHDOG_ERROR);
      }
    }
  }
}
